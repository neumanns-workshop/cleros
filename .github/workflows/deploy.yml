name: Build Sortes App

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

# Permissions needed for GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SORTES repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd web
          npm install

      - name: Build
        run: |
          cd web
          # Set the correct PUBLIC_URL for GitHub Pages
          REACT_APP_PUBLIC_URL="/sortes" CI=false SKIP_PREFLIGHT_CHECK=true DISABLE_ESLINT_PLUGIN=true npm run build
          # List contents to verify build
          echo "Build output files:"
          ls -la build/
          echo "Build static files:"
          ls -la build/static

      - name: Verify embedding dimension
        run: |
          # Check the embedding dimension in the metadata file to ensure it's 512
          if [ -f "web/public/data/enriched/embeddings/embeddings_metadata.json" ]; then
            echo "Verifying embedding dimension from metadata..."
            DIMENSION=$(grep -o '"embedding_dimension":[^,]*' web/public/data/enriched/embeddings/embeddings_metadata.json | cut -d ':' -f2)
            echo "Found embedding dimension: $DIMENSION"
            
            if [ "$DIMENSION" -eq 512 ]; then
              echo "✅ Embedding dimension is correct (512)"
            else
              echo "⚠️ Warning: Embedding dimension is $DIMENSION, expected 512"
            fi
          else
            echo "Warning: embeddings_metadata.json not found in web/public/"
          fi

      - name: Create deployment artifacts
        run: |
          mkdir -p deploy
          cp -R web/build/* deploy/
          
          # Ensure .nojekyll exists
          touch deploy/.nojekyll
          
          # Copy data directories if they exist
          if [ -d "web/public/data" ]; then
            echo "Copying data files..."
            cp -R web/public/data deploy/
          fi

      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sortes-build
          path: deploy/
          retention-days: 7

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          destination_dir: ./ 